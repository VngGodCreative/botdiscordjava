const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder, PermissionFlagsBits } = require('discord.js');
const { footer } = require('../../../config');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('say')
        .setDescription('üì¢ üó£Ô∏è L√†m cho bot n√≥i m·ªôt ƒëi·ªÅu g√¨ ƒë√≥')
        .addStringOption(option =>
            option.setName('type')
                .setDescription('ƒê·ªãnh d·∫°ng tin nh·∫Øn')
                .setRequired(true)
                .addChoices(
                    { name: 'plaintext', value: 'plaintext' },
                    { name: 'embed', value: 'embed' }
                ))
        .addStringOption(option =>
            option.setName('message')
                .setDescription('üì© N·ªôi dung tin nh·∫Øn b·∫°n mu·ªën bot n√≥i')
                .setRequired(true))
        .addStringOption(option =>
            option.setName('image')
                .setDescription('üñºÔ∏è URL h√¨nh ·∫£nh')
                .setRequired(false))
        .addStringOption(option =>
            option.setName('color')
                .setDescription('üé® M√†u tin nh·∫Øn embed (d·∫°ng HEX)')
                .setRequired(false))
        .addStringOption(option =>
            option.setName('title')
                .setDescription('üìù Ti√™u ƒë·ªÅ embed')
                .setRequired(false))
        .addStringOption(option =>
            option.setName('footer')
                .setDescription('üîª Ch√¢n embed')
                .setRequired(false))
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),
    category: 'admin',
    usage: '/say <type> <message> [image] [color] [title] [footer]',

    async execute(interaction) {
        if (!interaction.member.permissions.has(PermissionFlagsBits.Administrator)) {
            return interaction.reply({ content: '‚ùå B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.', ephemeral: true });
        }

        const type = interaction.options.getString('type');
        const messageContent = interaction.options.getString('message');
        const image = interaction.options.getString('image');
        const color = interaction.options.getString('color') || '#0099ff';
        const title = interaction.options.getString('title');
        const customFooter = interaction.options.getString('footer');

        if (type === 'plaintext') {
            if (image) {
                await interaction.channel.send({ content: messageContent, files: [image] });
            } else {
                await interaction.channel.send(messageContent);
            }
            await interaction.reply({
                embeds: [
                    new EmbedBuilder()
                        .setColor('#00ff00')
                        .setTitle('‚úÖ Th√†nh c√¥ng')
                        .setDescription('Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i d∆∞·ªõi d·∫°ng plaintext!')
                        .setFooter({
                            text: `${footer.text} ${footer.version}`,
                            iconURL: footer.icon_url || interaction.client.user.displayAvatarURL()
                        })
                ],
                ephemeral: true
            });
        } else if (type === 'embed') {
            const embed = new EmbedBuilder()
                .setColor(color)
                .setTitle(title || 'üì¢ Tin nh·∫Øn t·ª´ bot')
                .setDescription(messageContent)
                .setFooter({
                    text: customFooter || `${footer.text} ${footer.version}`,
                    iconURL: footer.icon_url || interaction.client.user.displayAvatarURL()
                });

            if (image) embed.setImage(image);

            await interaction.channel.send({ embeds: [embed] });
            await interaction.reply({
                embeds: [
                    new EmbedBuilder()
                        .setColor('#00ff00')
                        .setTitle('‚úÖ Th√†nh c√¥ng')
                        .setDescription('Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i d∆∞·ªõi d·∫°ng embed!')
                        .setFooter({
                            text: `${footer.text} ${footer.version}`,
                            iconURL: footer.icon_url || interaction.client.user.displayAvatarURL()
                        })
                ],
                ephemeral: true
            });
        }
    },
};