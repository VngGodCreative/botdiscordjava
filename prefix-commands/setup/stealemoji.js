const { EmbedBuilder } = require('discord.js');
const { footer } = require('../../../config');

module.exports = {
    name: 'stealemoji',
    description: 'üñºÔ∏è C∆∞·ªõp emoji t·ª´ link ho·∫∑c emoji ng∆∞·ªùi d√πng cung c·∫•p.',
    usage: '<name> <emoji|link>',
    category: 'setup',
    permissions: ['ADMINISTRATOR'],  // Quy·ªÅn admin

    async execute(message, args) {
        if (!message.member.permissions.has('ADMINISTRATOR')) {
            const noPermEmbed = new EmbedBuilder()
                .setColor('#FF0000')
                .setTitle('‚ùå Truy c·∫≠p b·ªã t·ª´ ch·ªëi')
                .setDescription('B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.')
                .setFooter({ text: `${footer.text} ${footer.version}`, iconURL: footer.icon_url || message.client.user.displayAvatarURL() });

            return message.reply({ embeds: [noPermEmbed] });
        }

        const name = args[0];
        const input = args[1];

        if (!name || !input) {
            const errorEmbed = new EmbedBuilder()
                .setColor('#FF0000')
                .setTitle('üö´ Thi·∫øu Th√¥ng Tin')
                .setDescription('Vui l√≤ng cung c·∫•p t√™n v√† emoji ho·∫∑c link cho emoji.')
                .setFooter({ text: `${footer.text} ${footer.version}`, iconURL: footer.icon_url || message.client.user.displayAvatarURL() });

            return message.reply({ embeds: [errorEmbed] });
        }

        let imageUrl;
        const customEmoji = input.match(/<:\w+:(\d+)>/);
        if (customEmoji) {
            imageUrl = `https://cdn.discordapp.com/emojis/${customEmoji[1]}.png`;
        } else if (input.startsWith('http')) {
            imageUrl = input;
        } else {
            const errorEmbed = new EmbedBuilder()
                .setColor('#FF0000')
                .setTitle('üö´ L·ªói ƒê·ªãnh D·∫°ng')
                .setDescription('Emoji ho·∫∑c link kh√¥ng h·ª£p l·ªá.')
                .setFooter({ text: `${footer.text} ${footer.version}`, iconURL: footer.icon_url || message.client.user.displayAvatarURL() });

            return message.reply({ embeds: [errorEmbed] });
        }

        message.guild.emojis.create({ attachment: imageUrl, name: name })
            .then(emoji => {
                const successEmbed = new EmbedBuilder()
                    .setColor('#00FF00')
                    .setTitle('‚úÖ C∆∞·ªõp Emoji Th√†nh C√¥ng')
                    .setDescription(`Emoji ${emoji} ƒë√£ ƒë∆∞·ª£c C∆∞·ªõp v·ªÅ server v·ªõi t√™n \`${name}\`!`)
                    .setImage(imageUrl)
                    .setFooter({ text: `${footer.text} ${footer.version}`, iconURL: footer.icon_url || message.client.user.displayAvatarURL() });

                message.reply({ embeds: [successEmbed] });
            })
            .catch(error => {
                console.error(error);
                const errorEmbed = new EmbedBuilder()
                    .setColor('#FF0000')
                    .setTitle('üö´ L·ªói C∆∞·ªõp Emoji')
                    .setDescription('C√≥ l·ªói khi C∆∞·ªõp emoji v√†o server. ‚ùå')
                    .setFooter({ text: `${footer.text} ${footer.version}`, iconURL: footer.icon_url || message.client.user.displayAvatarURL() });

                message.reply({ embeds: [errorEmbed] });
            });
    },
};